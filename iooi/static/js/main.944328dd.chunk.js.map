{"version":3,"sources":["utils/client-data.js","bootstrap.js","constants.js","utils/http-request.js","sagas/utils_sagas.js","sagas/index.js","reducers/index.js","reducers/utils_reducers.js","store/configure-store.js","pages/login/login.js","actions/utils.js","pages/home/home.js","routes.js","components/Theme.js","theme.js","app.js","render.js","index.js"],"names":["clientData","dataNode","document","getElementById","clientDataString","innerHTML","Object","assign","JSON","parse","debug","error","initClientData","GET_USER","GET_USER_SUCCESS","GET_USER_FAILURE","HttpRequest","HttpRequestHandler","classCallCheck","this","instance","axios","create","baseURL","concat","window","location","origin","withCredentials","method","body","csrf","auth","btoa","options","credentials","headers","Content-Type","Authorization","X-Requested-With","Accept","FormData","stringify","url","delete","get","fetch","generateFetchOptions","_csrf","then","response","ok","Promise","resolve","json","data","reject","getUser","action","regenerator_default","a","wrap","_context","prev","next","postData","call","sent","code","put","type","err","t0","stop","_marked","rootSagas","takeLatest","sagas_marked","rootReducer","combineReducers","login","state","arguments","length","undefined","objectSpread","stage","loading","displayClass","feedback","accessRequest","ldapSearch","info","rootSaga","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","all","fork","configure_store_marked","sagaMiddleware","createSagaMiddleware","middlewares","ReduxPromise","store","createStore","applyMiddleware","apply","run","LoginPage","props","possibleConstructorReturn","getPrototypeOf","console","log","loginUser","classes","react_default","createElement","id","React","Component","defaultProps","LoginPageConnect","connect","Login","withStyles","theme","withTheme","tdMoverLink","react_router_dom","to","HomePage","Button_default","variant","color","component","HomePageConnect","Home","RedirectToHome","react_router","from","Routes","exact","path","render","Routes1","colors","palette","createPalette","primary","main","Theme","typography","fontFamily","join","overrides","MuiPaper","root","padding","MuiTooltip","tooltip","backgroundColor","MuiIcon","width","height","MuiIconButton","MuiAvatar","colorDefault","grey","MuiMenuItem","text","selected","secondary","marginBottom","muiTheme","createMuiTheme","es","basename","requestURI","styles","CssBaseline_default","Grid_default","container","justify","item","xs","routes_Routes1","routes_Routes","__webpack_require__","r","__webpack_exports__","addEventListener","require"],"mappings":"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","file":"static/js/main.944328dd.chunk.js","sourcesContent":["/**\n * Grabs the data we dump from the server into the DOM and exports them as a singleton.\n * This allows us to conveniently dump server data into the dom and use this to load\n * that data into our app.\n */\n// because the way webpack is implemented, you can import this file anywhere\n// in the codebase like so:\n// import { clientData } from 'utils/client-data'\nimport debug from 'debug'\n\n\n\nlet profile = {}\nlet isAuthenticated = false\n\nconst clientData = {}\n\nconst AuthService = {\n  profile: profile,\n  isAuthenticated: isAuthenticated,\n  authenticate(profile) {\n    this.isAuthenticated = true\n    this.profile = profile\n  },\n  logout() {\n    this.isAuthenticated = false\n  },\n}\n\nfunction init() {\n  const dataNode = document.getElementById('client-data')\n  const clientDataString = (dataNode && dataNode.innerHTML) || '{}'\n\n  try {\n    Object.assign(clientData, JSON.parse(clientDataString))\n    debug('articulator:client-data:success')('load', clientData)\n  } catch (error) {\n    debug('articulator:client-data:error')('load', error)\n  }\n}\n\nexport { init, clientData, AuthService }\n","// this file runs after the DOMContentLoaded event,\n// but before the app is rendered\nimport { init as initClientData } from './utils/client-data'\n\ninitClientData()\n","const GET_USER = 'GET_USER'\nconst GET_USER_SUCCESS = 'GET_USER_SUCCESS'\nconst GET_USER_FAILURE = 'GET_USER_FAILURE'\n\nconst GET_VARIABLES = 'GET_VARIABLES'\nconst GET_VARIABLES_SUCCESS = 'GET_VARIABLES_SUCCESS'\nconst GET_VARIABLES_FAILURE = 'GET_VARIABLES_FAILURE'\n\nconst GET_CHECKPOINTS = 'GET_CHECKPOINTS'\nconst GET_CHECKPOINTS_SUCCESS = 'GET_CHECKPOINTS_SUCCESS'\nconst GET_CHECKPOINTS_FAILURE = 'GET_CHECKPOINTS_FAILURE'\n\nconst GET_DSOURCE = 'GET_DSOURCE'\nconst GET_DSOURCE_SUCCESS = 'GET_DSOURCE_SUCCESS'\nconst GET_DSOURCE_FAILURE = 'GET_DSOURCE_FAILURE'\nconst GET_DELIMITERS = 'GET_DELIMITERS'\nconst GET_DELIMITERS_SUCCESS = 'GET_DELIMITERS_SUCCESS'\nconst GET_DELIMITERS_FAILURE = 'GET_DELIMITERS_FAILURE'\nconst GET_PK_TYPE = 'GET_PK_TYPE'\nconst GET_PK_TYPE_SUCCESS = 'GET_PK_TYPE_SUCCESS'\nconst GET_PK_TYPE_FAILURE = 'GET_PK_TYPE_FAILURE'\nconst GET_DSCHEMA = 'GET_DSCHEMA'\nconst GET_DSCHEMA_SUCCESS = 'GET_DSCHEMA_SUCCESS'\nconst GET_DSCHEMA_FAILURE = 'GET_DSCHEMA_FAILURE'\nconst POST_JOB_SUBMIT = 'POST_JOB_SUBMIT'\nconst POST_JOB_SUBMIT_SUCCESS = 'POST_JOB_SUBMIT_SUCCESS'\nconst POST_JOB_SUBMIT_FAILURE = 'POST_JOB_SUBMIT_FAILURE'\nconst GET_RADD_INJECTION = 'GET_RADD_INJECTION'\nconst GET_RADD_INJECTION_SUCCESS = 'GET_RADD_INJECTION_SUCCESS'\nconst GET_RADD_INJECTION_FAILURE = 'GET_RADD_INJECTION_FAILURE'\nconst GET_BUILD_LIST = 'GET_BUILD_LIST'\nconst GET_BUILD_LIST_SUCCESS = 'GET_BUILD_LIST_SUCCESS'\nconst GET_BUILD_LIST_FAILURE = 'GET_BUILD_LIST_FAILURE'\nconst GET_CAL_CUTOFF_DATE = 'GET_CAL_CUTOFF_DATE'\nconst GET_CAL_CUTOFF_DATE_SUCCESS = 'GET_CAL_CUTOFF_DATE_SUCCESS'\nconst GET_CAL_CUTOFF_DATE_FAILURE = 'GET_CAL_CUTOFF_DATE_FAILURE'\nconst GET_RUCS_SERVICE = 'GET_RUCS_SERVICE'\nconst GET_RUCS_SERVICE_SUCCESS = 'GET_RUCS_SERVICE_SUCCESS'\nconst GET_RUCS_SERVICE_FAILURE = 'GET_RUCS_SERVICE_FAILURE'\nconst GET_JOBS = 'GET_JOBS'\nconst GET_JOBS_SUCCESS = 'GET_JOBS_SUCCESS'\nconst GET_JOBS_FAILURE = 'GET_JOBS_FAILURE'\nconst POST_FEEDBACK = 'POST_FEEDBACK'\nconst POST_FEEDBACK_SUCCESS = 'POST_FEEDBACK_SUCCESS'\nconst POST_FEEDBACK_FAILURE = 'POST_FEEDBACK_FAILURE'\n\nconst MR_GET_CHECKPOINTS = 'MR_GET_CHECKPOINTS'\nconst MR_GET_CHECKPOINTS_SUCCESS = 'MR_GET_CHECKPOINTS_SUCCESS'\nconst MR_GET_CHECKPOINTS_FAILURE = 'MR_GET_CHECKPOINTS_FAILURE'\n\nconst MR_GET_SERVICES = 'MR_GET_SERVICES'\nconst MR_GET_SERVICES_SUCCESS = 'MR_GET_SERVICES_SUCCESS'\nconst MR_GET_SERVICES_FAILURE = 'MR_GET_SERVICES_FAILURE'\n\nconst MR_GET_COMPUTE_ITEMS = 'MR_GET_COMPUTE_ITEMS'\nconst MR_GET_COMPUTE_ITEMS_SUCCESS = 'MR_GET_COMPUTE_ITEMS_SUCCESS'\nconst MR_GET_COMPUTE_ITEMS_FAILURE = 'MR_GET_COMPUTE_ITEMS_FAILURE'\n\nconst SEND_ACCESS_REQUEST = 'SEND_ACCESS_REQUEST'\nconst SEND_ACCESS_REQUEST_SUCCESS = 'SEND_ACCESS_REQUEST_SUCCESS'\nconst SEND_ACCESS_REQUEST_FAILURE = 'SEND_ACCESS_REQUEST_FAILURE'\n\nconst LDAP_SEARCH = 'LDAP_SEARCH'\nconst LDAP_SEARCH_SUCCESS = 'LDAP_SEARCH_SUCCESS'\nconst LDAP_SEARCH_FAILURE = 'LDAP_SEARCH_FAILURE'\n\nconst POST_MR_JOB = 'POST_MR_JOB'\nconst POST_MR_JOB_SUCCESS = 'POST_MR_JOB_SUCCESS'\nconst POST_MR_JOB_FAILURE = 'POST_MR_JOB_FAILURE'\n\nconst CHECK_TABLE_EXIST  = 'CHECK_TABLE_EXIST'\nconst CHECK_TABLE_EXIST_SUCCESS  = 'CHECK_TABLE_EXIST_SUCCESS'\nconst CHECK_TABLE_EXIST_FAILURE  = 'CHECK_TABLE_EXIST_FAILURE'\n\nconst GET_WANTED_FIELDS  = 'GET_WANTED_FIELDS'\nconst GET_WANTED_FIELDS_SUCCESS  = 'GET_WANTED_FIELDS_SUCCESS'\nconst GET_WANTED_FIELDS_FAILURE  = 'GET_WANTED_FIELDS_FAILURE'\n\nconst POST_TD_JOB = 'POST_TD_JOB'\nconst POST_TD_JOB_SUCCESS = 'POST_TD_JOB_SUCCESS'\nconst POST_TD_JOB_FAILURE = 'POST_TD_JOB_FAILURE'\n\nexport {\n  CHECK_TABLE_EXIST,\n  CHECK_TABLE_EXIST_SUCCESS,\n  CHECK_TABLE_EXIST_FAILURE,\n  GET_WANTED_FIELDS,\n  GET_WANTED_FIELDS_SUCCESS,\n  GET_WANTED_FIELDS_FAILURE,\n  POST_TD_JOB,\n  POST_TD_JOB_SUCCESS,\n  POST_TD_JOB_FAILURE,\n  LDAP_SEARCH,\n  LDAP_SEARCH_SUCCESS,\n  LDAP_SEARCH_FAILURE,\n  SEND_ACCESS_REQUEST,\n  SEND_ACCESS_REQUEST_SUCCESS,\n  SEND_ACCESS_REQUEST_FAILURE,\n  MR_GET_COMPUTE_ITEMS,\n  MR_GET_COMPUTE_ITEMS_SUCCESS,\n  MR_GET_COMPUTE_ITEMS_FAILURE,\n  MR_GET_SERVICES,\n  MR_GET_SERVICES_SUCCESS,\n  MR_GET_SERVICES_FAILURE,\n  MR_GET_CHECKPOINTS,\n  MR_GET_CHECKPOINTS_SUCCESS,\n  MR_GET_CHECKPOINTS_FAILURE,\n  GET_USER,\n  GET_USER_SUCCESS,\n  GET_USER_FAILURE,\n  GET_VARIABLES,\n  GET_VARIABLES_SUCCESS,\n  GET_VARIABLES_FAILURE,\n  GET_CHECKPOINTS,\n  GET_CHECKPOINTS_SUCCESS,\n  GET_CHECKPOINTS_FAILURE,\n  GET_DSOURCE,\n  GET_DSOURCE_SUCCESS,\n  GET_DSOURCE_FAILURE,\n  GET_DELIMITERS,\n  GET_DELIMITERS_SUCCESS,\n  GET_DELIMITERS_FAILURE,\n  GET_PK_TYPE,\n  GET_PK_TYPE_SUCCESS,\n  GET_PK_TYPE_FAILURE,\n  GET_DSCHEMA,\n  GET_DSCHEMA_SUCCESS,\n  GET_DSCHEMA_FAILURE,\n  POST_JOB_SUBMIT,\n  POST_JOB_SUBMIT_SUCCESS,\n  POST_JOB_SUBMIT_FAILURE,\n  GET_RADD_INJECTION,\n  GET_RADD_INJECTION_SUCCESS,\n  GET_RADD_INJECTION_FAILURE,\n  GET_BUILD_LIST,\n  GET_BUILD_LIST_SUCCESS,\n  GET_BUILD_LIST_FAILURE,\n  GET_CAL_CUTOFF_DATE,\n  GET_CAL_CUTOFF_DATE_SUCCESS,\n  GET_CAL_CUTOFF_DATE_FAILURE,\n  GET_RUCS_SERVICE,\n  GET_RUCS_SERVICE_SUCCESS,\n  GET_RUCS_SERVICE_FAILURE,\n  GET_JOBS,\n  GET_JOBS_SUCCESS,\n  GET_JOBS_FAILURE,\n  POST_FEEDBACK,\n  POST_FEEDBACK_SUCCESS,\n  POST_FEEDBACK_FAILURE,\n  POST_MR_JOB,\n  POST_MR_JOB_SUCCESS,\n  POST_MR_JOB_FAILURE,\n}\n","import axios from 'axios'\nimport { clientData } from './client-data'\n\nclass HttpRequestHandler {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${window.location.origin}/api/v1/accounts/`,\n      withCredentials: true,\n    })\n  }\n\n  generateFetchOptions(method, body, csrf) {\n    const auth = btoa(`test:test`);\n    const options = {\n      method,\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${auth}`,\n        'X-Requested-With': 'XMLHttpRequest',\n        Accept: 'application/json',\n      },\n    }\n    if (method === 'POST' || method === 'PUT') {\n      if (body instanceof FormData) {\n        options.body = body\n        // Do not set 'Content-Type' header. Let's fetch do that.\n      } else {\n        options.body = JSON.stringify(body)\n        options.headers['Content-Type'] = 'application/json'\n      }\n    }\n    return options\n  }\n\n  delete(url) {\n    return this.instance.delete(url)\n  }\n\n  getData(url) {\n    return this.instance.get(url)\n  }\n\n  postData(url, body) {\n    return fetch(\n      `${window.location.origin}/api/v1/accounts/${url}`,\n      this.generateFetchOptions('POST', body, clientData._csrf),\n    ).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response)\n      }\n\n      // return a new promise to match the previous implementation (axios)\n      return new Promise(function(resolve) {\n        return response.json().then(data => {\n          resolve({ data })\n        })\n      })\n    })\n\n    // return this.instance.post(url, {\n    //   ...data,\n    //   _csrf: clientData._csrf,\n    // })\n  }\n\n  putData(url, body) {\n    return fetch(\n      `${window.location.origin}/api/v1/accounts/${url}`,\n      this.generateFetchOptions('PUT', body, clientData._csrf),\n    ).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response)\n      }\n\n      // return a new promise to match the previous implementation (axios)\n      return new Promise(function(resolve) {\n        return response.json().then(data => {\n          resolve({ data })\n        })\n      })\n    })\n\n    // return this.instance.post(url, {\n    //   ...data,\n    //   _csrf: clientData._csrf,\n    // })\n  }\n}\n\nconst HttpRequest = new HttpRequestHandler()\n\nexport { HttpRequest }\n","import { call, put } from 'redux-saga/effects'\n\nimport { HttpRequest } from '../utils/http-request'\n\nimport { \n  GET_USER_SUCCESS,\n  GET_USER_FAILURE,\n} from '../constants'\n\nfunction* getUser(action) {\n  try {\n    const url = 'accounts/login'\n    const body = action.postData\n    const response = yield call([HttpRequest, HttpRequest.postData], url, body)\n    if (response.data.code === 0) {\n      yield put({ type: GET_USER_SUCCESS, error: response.data.err })\n    } else {\n      yield put({ type: GET_USER_FAILURE, error: response.data.err  || 'Internal server error.'})\n    }\n  } catch (e) {\n    yield put({ type: GET_USER_FAILURE, error: 'Failed to connect the server!'})\n  }\n}\n\nexport { getUser }\n","import { takeLatest } from 'redux-saga/effects'\n\nimport {\n  GET_USER,\n} from '../constants'\nimport { \n  getUser,\n} from './utils_sagas'\n\nfunction* rootSagas() {\n  yield takeLatest(GET_USER, getUser)\n}\n\nexport { rootSagas }\n","import { combineReducers } from 'redux'\nimport { \n  loginReducer,\n  feedbackReducer,\n  accessRequestReducer,\n  ldapSearchReducer,\n} from './utils_reducers'\n\nconst rootReducer = combineReducers({\n  login: loginReducer,\n  feedback: feedbackReducer,\n  accessRequest: accessRequestReducer,\n  ldapSearch: ldapSearchReducer,\n})\n\nexport { rootReducer }\n","import { \n  GET_USER, \n  GET_USER_SUCCESS,\n  GET_USER_FAILURE,\n  POST_FEEDBACK,\n  POST_FEEDBACK_SUCCESS,\n  POST_FEEDBACK_FAILURE,\n  SEND_ACCESS_REQUEST,\n  SEND_ACCESS_REQUEST_SUCCESS,\n  SEND_ACCESS_REQUEST_FAILURE,\n  LDAP_SEARCH,\n  LDAP_SEARCH_SUCCESS,\n  LDAP_SEARCH_FAILURE,\n} from '../constants'\n\nconst ldapSearchReducer = (state = {}, action) => {\n  switch (action.type) {\n    case LDAP_SEARCH:\n      return {\n        ...state,\n        info: '',\n      }\n    case LDAP_SEARCH_SUCCESS:\n      return {\n        ...state,\n        info: action.info,\n      }\n    case LDAP_SEARCH_FAILURE:\n      return {\n        ...state,\n        info: action.info || 'LDAP search failed!',\n      }\n    default:\n      return state\n  }\n}\n\nconst loginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case GET_USER:\n      return {\n        ...state,\n        stage: 2,\n        loading: true,\n        error: '',\n        displayClass: 'show',\n      }\n    case GET_USER_SUCCESS:\n      return {\n        ...state,\n        stage: 3,\n        error: action.error,\n        loading: false,\n        displayClass: 'hide',\n      }\n    case GET_USER_FAILURE:\n      return {\n        ...state,\n        stage: 4,\n        loading: false,\n        error: action.error,\n        displayClass: 'hide',\n      }\n    default:\n      return state\n  }\n}\n\nconst feedbackReducer = (state = {}, action) => {\n  switch (action.type) {\n    case POST_FEEDBACK:\n      return {\n        ...state,\n        err: '',\n      }\n    case POST_FEEDBACK_SUCCESS:\n      return {\n        ...state,\n        err: action.err,\n      }\n    case POST_FEEDBACK_FAILURE:\n      return {\n        ...state,\n        err: action.err || 'Failed to send feedback!',\n      }\n    default:\n      return state\n  }\n}\n\nconst accessRequestReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SEND_ACCESS_REQUEST:\n      return {\n        ...state,\n        err: '',\n      }\n    case SEND_ACCESS_REQUEST_SUCCESS:\n      return {\n        ...state,\n        err: action.err,\n      }\n    case SEND_ACCESS_REQUEST_FAILURE:\n      return {\n        ...state,\n        err: action.err || 'Failed to send Request!',\n      }\n    default:\n      return state\n  }\n}\n\nexport { loginReducer, feedbackReducer, accessRequestReducer, ldapSearchReducer }\n","import 'regenerator-runtime/runtime'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport ReduxPromise from 'redux-promise'\nimport createSagaMiddleware from 'redux-saga'\nimport { all, fork } from 'redux-saga/effects'\n\nimport { rootSagas } from '../sagas'\n\nimport { rootReducer } from '../reducers'\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  : compose\n/* eslint-enable no-underscore-dangle */\n\nfunction* rootSaga() {\n  yield all([fork(rootSagas)])\n}\n\nconst sagaMiddleware = createSagaMiddleware()\nconst middlewares = [ReduxPromise, sagaMiddleware]\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)))\n\nsagaMiddleware.run(rootSaga)\n\nfunction configureStore() {\n  return store\n}\n\nexport { configureStore }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\n\nimport { loginUser } from '../../actions'\n\nconst styles = theme => ({})\nclass LoginPage extends React.Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  componentWillMount() {\n    console.log(111)\n    this.props.loginUser({})\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div id=\"home\">\n     login\n      </div>\n );\n}\n}\n\nLoginPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object,\n  loginUser: PropTypes.func,\n}\n\nLoginPage.defaultProps = {}\n\n\nfunction mapStateToProps(store) {\n  return {}\n}\nconst LoginPageConnect = connect(mapStateToProps, {loginUser})(LoginPage)\n\nconst Login = withStyles(styles, { withTheme: true })(LoginPageConnect)\n\nexport { Login }","import { \n    GET_USER,\n } from '../constants'\n\n const loginUser = postData => {\n    return {\n      type: GET_USER,\n      postData,\n      displayClass: 'show',\n    }\n  }\n  export { loginUser }","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nconst styles = theme => ({})\n\nconst tdMoverLink = props => <Link to=\"/login\" {...props} />\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  componentWillMount() {\n    console.log(1111)\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div id=\"home\">\n        home\n        <div>\n          <Button variant=\"contained\" color=\"primary\" component={tdMoverLink}>\n                            Get Started\n          </Button>\n        </div>\n      </div>\n );\n}\n}\n\nHomePage.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object,\n}\n\nHomePage.defaultProps = {}\n\n\nfunction mapStateToProps(store) {\n  return {}\n}\nconst HomePageConnect = connect(mapStateToProps)(HomePage)\n\nconst Home = withStyles(styles, { withTheme: true })(HomePageConnect)\n\nexport { Home }","import React from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom'\nimport { Login } from './pages/login'\nimport { Home } from './pages/home'\nconst RedirectToHome = () => <Redirect from=\"*\" to=\"/\" />\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route render={RedirectToHome} />\n  </Switch>\n)\n\nconst Routes1 = () => (\n  <Switch>\n    <Route path=\"/login\" component={Login} />\n  </Switch>\n)\n\nexport { Routes, Routes1 }\n","import grey from '@material-ui/core/colors/grey'\nimport createPalette from '@material-ui/core/styles/createPalette'\n\nconst colors = {\n  main: '#9966ff',\n}\n\nconst palette = createPalette({\n  primary: {\n    main: colors.main,\n  },\n})\n\nconst Theme = {\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      'PayPal-Sans',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        padding: 20,\n      },\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: colors.main,\n      },\n    },\n    MuiIcon: {\n      root: {\n        width: 24,\n        height: 24,\n      },\n    },\n    MuiIconButton: {\n      root: {\n        width: 40,\n        height: 40,\n      },\n    },\n    MuiAvatar: {\n      colorDefault: {\n        color: 'black',\n        backgroundColor: grey[200],\n      },\n    },\n    MuiMenuItem: {\n      root: {\n        color: palette.text.primary,\n      },\n      selected: {\n        backgroundColor: 'transparent !important',\n        color: palette.secondary.main,\n      },\n    },\n  },\n  palette,\n}\n\nexport default Theme","import Theme from './components/Theme'\n\nconst colors = {\n  main: '#9966ff',\n}\n\nconst theme = {\n  // Here you need to use the spread operator to avoid loosing other overrides\n  ...Theme,\n  overrides: {\n    ...Theme.overrides,\n    MuiPaper: {\n      root: {\n        padding: '20px',\n        marginBottom: '20px',\n      },\n    },\n  },\n  // Here you need to use the spread operator to avoid loosing other overrides\n  palette: {\n    ...Theme.palette,\n    primary: {\n      // Here you need to use the spread operator to avoid loosing other overrides\n      ...Theme.palette.primary,\n      main: colors.main,\n    },\n  },\n}\n\nexport { theme, colors }\n","import React from 'react'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport { Routes, Routes1 } from './routes'\nimport { theme } from './theme'\n\nconst muiTheme = createMuiTheme(theme)\n\nconst App = () => (\n  <MuiThemeProvider theme={muiTheme}>\n    <CssBaseline />\n    <Grid container justify=\"center\">\n      <Grid item xs={10}>\n        <Routes />\n      </Grid>\n    </Grid>\n  </MuiThemeProvider>\n)\n\nconst App1 = () => (\n  <MuiThemeProvider theme={muiTheme}>\n    <CssBaseline />\n    <Grid container justify=\"center\">\n      <Grid item xs={10}>\n        <Routes1 />\n      </Grid>\n    </Grid>\n  </MuiThemeProvider>\n)\nexport { App, App1 }\n","import './bootstrap'\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\n\nimport { clientData, AuthService } from './utils/client-data'\nimport { configureStore } from './store/configure-store'\nimport { App, App1 } from './app'\n\nconst store = configureStore()\n\nconst SecretRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      AuthService.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n)\n\nrender(\n  <Provider store={store}>\n    <Router basename={clientData.requestURI}>\n      <Switch>\n        <Route exact path=\"/login\" component={App1} />\n        <Route path=\"/\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n)\n","import './global.css'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // this is the only `require` that should be in our app. Using `require` here\n  // allows us to defer import resolution until after the DOMContentLoaded\n  // event is fired.\n  require('./render')\n})\n"],"sourceRoot":""}